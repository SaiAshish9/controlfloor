// Package docs GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import (
	"bytes"
	"encoding/json"
	"strings"
	"text/template"

	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/": {
            "get": {
                "summary": "Home - Device list"
            }
        },
        "/device/click": {
            "post": {
                "summary": "Device - Click coordinate",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Device UDID",
                        "name": "udid",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "x",
                        "name": "x",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "y",
                        "name": "y",
                        "in": "formData",
                        "required": true
                    }
                ]
            }
        },
        "/device/hardPress": {
            "post": {
                "summary": "Device - Hard press coordinate",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Device UDID",
                        "name": "udid",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "x",
                        "name": "x",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "y",
                        "name": "y",
                        "in": "formData",
                        "required": true
                    }
                ]
            }
        },
        "/device/home": {
            "post": {
                "summary": "Device click",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Device UDID",
                        "name": "udid",
                        "in": "formData",
                        "required": true
                    }
                ]
            }
        },
        "/device/imgStream": {
            "get": {
                "description": "Device - Image Stream Websocket",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Device UDID",
                        "name": "udid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Video Instance ID",
                        "name": "rid",
                        "in": "query",
                        "required": true
                    }
                ]
            }
        },
        "/device/info": {
            "get": {
                "summary": "Device - Device info page",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Device UDID",
                        "name": "udid",
                        "in": "query",
                        "required": true
                    }
                ]
            }
        },
        "/device/info/json": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Device - Device info JSON",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Device UDID",
                        "name": "udid",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.SDeviceInfo"
                        }
                    }
                }
            }
        },
        "/device/keys": {
            "post": {
                "summary": "Device - Simulate keystrokes",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Device UDID",
                        "name": "udid",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Incrementing unique ID",
                        "name": "curid",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Keys",
                        "name": "keys",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Previous keys",
                        "name": "prevkeys",
                        "in": "formData",
                        "required": true
                    }
                ]
            }
        },
        "/device/kick": {
            "get": {
                "summary": "Device - Kick device user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Device UDID",
                        "name": "udid",
                        "in": "query",
                        "required": true
                    }
                ]
            }
        },
        "/device/longPress": {
            "post": {
                "summary": "Device - Long Press coordinate",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Device UDID",
                        "name": "udid",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "x",
                        "name": "x",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "y",
                        "name": "y",
                        "in": "formData",
                        "required": true
                    }
                ]
            }
        },
        "/device/status/exists": {
            "post": {
                "summary": "Device Status - Existence",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Device UDID",
                        "name": "udid",
                        "in": "query",
                        "required": true
                    }
                ]
            }
        },
        "/device/status/info": {
            "post": {
                "summary": "Device Status - Information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Device UDID",
                        "name": "udid",
                        "in": "query",
                        "required": true
                    }
                ]
            }
        },
        "/device/status/videoStarted": {
            "post": {
                "summary": "Device Status - Video Started",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Device UDID",
                        "name": "udid",
                        "in": "query",
                        "required": true
                    }
                ]
            }
        },
        "/device/status/videoStopped": {
            "post": {
                "summary": "Device Status - Video Stopped",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Device UDID",
                        "name": "udid",
                        "in": "query",
                        "required": true
                    }
                ]
            }
        },
        "/device/status/wdaStarted": {
            "post": {
                "summary": "Device Status - WDA Started",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Device UDID",
                        "name": "udid",
                        "in": "query",
                        "required": true
                    }
                ]
            }
        },
        "/device/status/wdaStopped": {
            "post": {
                "summary": "Device Status - WDA Stopped",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Device UDID",
                        "name": "udid",
                        "in": "query",
                        "required": true
                    }
                ]
            }
        },
        "/device/swipe": {
            "post": {
                "summary": "Device - Swipe",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Device UDID",
                        "name": "udid",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "x1",
                        "name": "x1",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "y1",
                        "name": "y1",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "x2",
                        "name": "x2",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "y2",
                        "name": "y2",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "Time of swipe",
                        "name": "delay",
                        "in": "formData",
                        "required": true
                    }
                ]
            }
        },
        "/device/video": {
            "get": {
                "summary": "Device - Video Page",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Device UDID",
                        "name": "udid",
                        "in": "query",
                        "required": true
                    }
                ]
            }
        },
        "/device/videoStop": {
            "post": {
                "summary": "Device - Stop device video",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Device UDID",
                        "name": "udid",
                        "in": "query",
                        "required": true
                    }
                ]
            }
        },
        "/login": {
            "post": {
                "description": "User - Login",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "user",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Password",
                        "name": "pass",
                        "in": "formData",
                        "required": true
                    }
                ]
            }
        },
        "/logout": {
            "post": {
                "description": "User - Logout"
            }
        },
        "/provider/imgStream": {
            "get": {
                "description": "Provider - Image Stream Websocket"
            }
        },
        "/provider/login": {
            "post": {
                "description": "Provider - Login",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "user",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Password",
                        "name": "pass",
                        "in": "query",
                        "required": true
                    }
                ]
            }
        },
        "/provider/logout": {
            "get": {
                "description": "Provider - Logout"
            }
        },
        "/provider/register": {
            "post": {
                "description": "Provider - Register",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Registration password",
                        "name": "regPass",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Provider username",
                        "name": "username",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.SProviderRegistration"
                        }
                    }
                }
            }
        },
        "/provider/ws": {
            "get": {
                "description": "Provider - Websocket"
            }
        }
    },
    "definitions": {
        "main.SDeviceInfo": {
            "type": "object",
            "properties": {
                "clickHeight": {
                    "type": "integer",
                    "example": 844
                },
                "clickWidth": {
                    "type": "integer",
                    "example": 390
                },
                "deviceVideo": {
                    "type": "string",
                    "example": "up"
                },
                "name": {
                    "type": "string",
                    "example": "Phone Name"
                },
                "provider": {
                    "type": "integer",
                    "example": 1
                },
                "rawInfo": {
                    "type": "string"
                },
                "udid": {
                    "type": "string",
                    "example": "00008100-001338811EE10033"
                },
                "vidHeight": {
                    "type": "integer",
                    "example": 844
                },
                "vidWidth": {
                    "type": "integer",
                    "example": 390
                },
                "videoStatus": {
                    "type": "string",
                    "example": "up"
                },
                "wdaStatus": {
                    "type": "string",
                    "example": "up"
                }
            }
        },
        "main.SProviderRegistration": {
            "type": "object",
            "properties": {
                "Existed": {
                    "type": "boolean",
                    "example": false
                },
                "Password": {
                    "type": "string",
                    "example": "huefw3fw3"
                },
                "Success": {
                    "type": "boolean",
                    "example": true
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "",
	BasePath:    "",
	Schemes:     []string{},
	Title:       "ControlFloor API",
	Description: "ControlFloor Server API",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
		"escape": func(v interface{}) string {
			// escape tabs
			str := strings.Replace(v.(string), "\t", "\\t", -1)
			// replace " with \", and if that results in \\", replace that with \\\"
			str = strings.Replace(str, "\"", "\\\"", -1)
			return strings.Replace(str, "\\\\\"", "\\\\\\\"", -1)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
